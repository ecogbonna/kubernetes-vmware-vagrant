Deploying metrics-server on Kubernetes Cluster Installed with kubeadm
+-------------------------------------------------------------------+
Read: https://syself.com/blog/secure-metrics-server to understand more why you shouldn't use kubelet-insecure-tls


Running Metrics-Server Securely
===============================
Adding "serverTLSBootstrap: true" in cluster’s kubelet ConfigMap kubelet-config.
# kubectl get cm -A
# kubectl edit cm kubelet-config -n kube-system
# kubectl get cm kubelet-config -n kube-system -o yaml | grep server
    serverTLSBootstrap: true
	

Adding "serverTLSBootstrap: true" into config.yaml under /var/lib/kubelet/ on all cluster nodes.
# vi /var/lib/kubelet/config.yaml


To make the newly added configuration to work, we need to restart kubelet daemon on all nodes:
# sudo systemctl restart kubelet.service


check if there’s any CSR created:
$ kubectl get csr
$ kubectl certificate approve <CSR>



References:
https://particule.io/en/blog/kubeadm-metrics-server/
https://blog.zespre.com/deploying-metrics-server-on-kubernetes-cluster-installed-with-kubeadm.html




Deploy metrics server in HA Mode
================================
Note:
This configuration requires having a cluster with at least 2 nodes on which Metrics Server can be scheduled. To install the latest Metrics Server release in high availability mode from the 
high-availability.yaml manifest, run the following command.

curl -LO https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/high-availability.yaml
sudo sed -i 's/policy\/v1beta1/policy\/v1/g' high-availability.yaml

kubectl apply -f high-availability.yaml

kubectl get deployment metrics-server -n kube-system


OR:

Deploy in non-HA Mode
=====================
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

kubectl get deployment metrics-server -n kube-system




References:
https://computingforgeeks.com/how-to-deploy-metrics-server-to-kubernetes-cluster/?expand_article=1




Validating Metrics server installation
======================================
$ k get APIservice v1beta1.metrics.k8s.io
NAME                     SERVICE                      AVAILABLE   AGE
v1beta1.metrics.k8s.io   kube-system/metrics-server   True        47m


$ k describe APIservice v1beta1.metrics.k8s.io | grep Conditions -A4
  Conditions:
    Last Transition Time:  2023-07-18T14:58:21Z
    Message:               all checks passed
    Reason:                Passed
    Status:                True

$ k top nodes

$ kubectl run dnsutils --image=chieme/curl --command -- sleep infinity
$ kubectl run dnsutils --image=chieme/curl --command -- sleep infinity
$ k exec -it dnsutils -- bash
root@dnsutils:/# for value in {1..5}; do curl 10.64.12.135:443; done
Client sent an HTTP request to an HTTPS server.
Client sent an HTTP request to an HTTPS server.
Client sent an HTTP request to an HTTPS server.
Client sent an HTTP request to an HTTPS server.
Client sent an HTTP request to an HTTPS server.


